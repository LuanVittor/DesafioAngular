{"ast":null,"code":"import _asyncToGenerator from \"/home/luan/Angular_Desafio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet BoardComponent = class BoardComponent {\n  constructor() {\n    this.squares = [];\n    this.xIsNext = true;\n    this.winner = null;\n    this.tied = false;\n    this.player1 = '';\n    this.player2 = '';\n    this.readyToStart = false;\n    this.finishGame = false; // leaderboardPlayer1: number = 0;\n    // leaderboardPlayer2: number = 0;\n\n    this.winnerArray = [];\n    this.gamesHistory = [];\n  } // ngOnInit(): void {\n  //   this.newGame()\n  // }\n\n\n  definePlayer1(event) {\n    return this.player1 = event.target.value;\n  }\n\n  definePlayer2(event) {\n    return this.player2 = event.target.value;\n  }\n\n  newGame() {\n    this.readyToStart = true;\n    this.squares = Array(9).fill(null);\n    this.winner = null;\n    this.xIsNext = true;\n    this.tied = false;\n    this.finishGame = false;\n  }\n\n  get currentPlayer() {\n    return this.xIsNext ? this.player1 : this.player2;\n  }\n\n  paint(index) {\n    return this.winnerArray.includes(index) ? true : false;\n  }\n\n  moveHelper(currentPlayer) {\n    return currentPlayer === this.player1 ? 'X' : 'O';\n  }\n\n  makeMove(id) {\n    if (!this.squares[id]) {\n      this.squares.splice(id, 1, this.moveHelper(this.currentPlayer));\n      this.xIsNext = !this.xIsNext;\n    }\n\n    this.calculateWinner();\n  }\n\n  makeScore() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const obj = {\n        player1: _this.player1,\n        player2: _this.player2,\n        winner: _this.winner\n      };\n      const methods = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(obj)\n      };\n      const score = yield fetch('http://localhost:3000/makeWinner', methods);\n      const data = yield score.json();\n      _this.gamesHistory = data;\n    })();\n  }\n\n  calculateWinner() {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (this.squares[a] && this.squares[a] === this.squares[b] && this.squares[a] === this.squares[c]) {\n        this.finishGame = true;\n        this.winnerArray = lines[i];\n        const isXTheWinner = this.squares[a] === 'X';\n        this.makeScore(); // (isXTheWinner) ? this.leaderboardPlayer1 += 1 : this.leaderboardPlayer2 += 1;\n\n        return isXTheWinner ? this.winner = this.player1 : this.winner = this.player2;\n      }\n    }\n\n    if (this.squares.every(square => square !== null)) {\n      this.finishGame = true;\n      this.makeScore();\n      return this.tied = true;\n    }\n\n    return null;\n  }\n\n};\nBoardComponent = __decorate([Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss']\n})], BoardComponent);\nexport { BoardComponent };","map":{"version":3,"sources":["/home/luan/Angular_Desafio/src/app/board/board.component.ts"],"names":["__decorate","Component","BoardComponent","constructor","squares","xIsNext","winner","tied","player1","player2","readyToStart","finishGame","winnerArray","gamesHistory","definePlayer1","event","target","value","definePlayer2","newGame","Array","fill","currentPlayer","paint","index","includes","moveHelper","makeMove","id","splice","calculateWinner","makeScore","obj","methods","method","headers","body","JSON","stringify","score","fetch","data","json","lines","i","length","a","b","c","isXTheWinner","every","square","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet BoardComponent = class BoardComponent {\n    constructor() {\n        this.squares = [];\n        this.xIsNext = true;\n        this.winner = null;\n        this.tied = false;\n        this.player1 = '';\n        this.player2 = '';\n        this.readyToStart = false;\n        this.finishGame = false;\n        // leaderboardPlayer1: number = 0;\n        // leaderboardPlayer2: number = 0;\n        this.winnerArray = [];\n        this.gamesHistory = [];\n    }\n    // ngOnInit(): void {\n    //   this.newGame()\n    // }\n    definePlayer1(event) {\n        return this.player1 = event.target.value;\n    }\n    definePlayer2(event) {\n        return this.player2 = event.target.value;\n    }\n    newGame() {\n        this.readyToStart = true;\n        this.squares = Array(9).fill(null);\n        this.winner = null;\n        this.xIsNext = true;\n        this.tied = false;\n        this.finishGame = false;\n    }\n    get currentPlayer() {\n        return this.xIsNext ? this.player1 : this.player2;\n    }\n    paint(index) {\n        return (this.winnerArray.includes(index)) ? true : false;\n    }\n    moveHelper(currentPlayer) {\n        return (currentPlayer === this.player1) ? 'X' : 'O';\n    }\n    makeMove(id) {\n        if (!this.squares[id]) {\n            this.squares.splice(id, 1, this.moveHelper(this.currentPlayer));\n            this.xIsNext = !this.xIsNext;\n        }\n        this.calculateWinner();\n    }\n    async makeScore() {\n        const obj = {\n            player1: this.player1,\n            player2: this.player2,\n            winner: this.winner,\n        };\n        const methods = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(obj)\n        };\n        const score = await fetch('http://localhost:3000/makeWinner', methods);\n        const data = await score.json();\n        this.gamesHistory = data;\n    }\n    calculateWinner() {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6]\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (this.squares[a] && this.squares[a] === this.squares[b] && this.squares[a] === this.squares[c]) {\n                this.finishGame = true;\n                this.winnerArray = lines[i];\n                const isXTheWinner = this.squares[a] === 'X';\n                this.makeScore();\n                // (isXTheWinner) ? this.leaderboardPlayer1 += 1 : this.leaderboardPlayer2 += 1;\n                return (isXTheWinner) ? this.winner = this.player1 : this.winner = this.player2;\n            }\n        }\n        if (this.squares.every((square) => square !== null)) {\n            this.finishGame = true;\n            this.makeScore();\n            return this.tied = true;\n        }\n        return null;\n    }\n};\nBoardComponent = __decorate([\n    Component({\n        selector: 'app-board',\n        templateUrl: './board.component.html',\n        styleUrls: ['./board.component.scss']\n    })\n], BoardComponent);\nexport { BoardComponent };\n"]},"metadata":{},"sourceType":"module"}